<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>1401</x><y>370</y><w>450</w><h>100</h></coordinates><panel_attributes>_IMessage_
--
--
+ Encode(inout encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32  const
+ Decode(in encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32 
+ Duplicate(): std::shared_ptr&lt;IMessage&gt; const
+ EncodedSize(): std::size_t const</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1401</x><y>950</y><w>450</w><h>150</h></coordinates><panel_attributes>_MessageOBDInfo17691_
--
--
+ MessageOBDInfo17691()
+ ~MessageOBDInfo17691()

+ Encode(encode::std::vector&lt;SMLK_UINT8&gt; &amp;) : SMLK_UINT32 const
+ Decode(in encode::std::vector&lt;SMLK_UINT8&gt; &amp;) : SMLK_UINT32
+ Duplicate() : std::shared_ptr&lt;IMessage&gt; const;
+ EncodedSize() : std::size_t const;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1401</x><y>550</y><w>450</w><h>300</h></coordinates><panel_attributes>_MessageOBDInfo_
--
+ m_protocol: SMLK_UINT8
+ m_mil_status: SMLK_UINT8
+ m_diag_support_status: SMLK_UINT16
+ m_diag_ready_status: SMLK_UINT16
+ m_vin: SMLK_UINT8  [M_GB_17691_SZ_VIN]
+ m_scin: SMLK_UINT8 [M_GB_17691_SZ_SCIN]
+ m_cvn: SMLK_UINT8 [M_GB_17691_SZ_CVN]
+ m_iupr: SMLK_UINT8 [M_GB_17691_SZ_IUPR]
+ m_dtc: SMLK_UINT8
+ m_dtcs: std::vector&lt;SMLK_UINT32&gt;
--
+ MessageOBDInfo()
+ ~MessageOBDInfo()

+ Encode(encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32 const
+ Decode(in encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32
+ Duplicate(): std::shared_ptr&lt;IMessage&gt; const
+ EncodedSize(): std::size_t const
+ operator=(in other:MessageOBDInfo &amp;): MessageOBDInfo &amp;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1601</x><y>840</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1601</x><y>460</y><w>30</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>740</x><y>310</y><w>500</w><h>90</h></coordinates><panel_attributes>_IMessage_
--
--
+ Encode(inout encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32  const
+ Decode(in encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32 
+ Duplicate(): std::shared_ptr&lt;IMessage&gt; const
+ EncodedSize(): std::size_t const</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>980</x><y>390</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>740</x><y>500</y><w>500</w><h>440</h></coordinates><panel_attributes>_MessageEngineInfo_
--
+ m_tachograph_vehicle_speed: vehicle::SignalVariant
+ m_barometric_pressure: vehicle::SignalVariant
+ m_actual_engine_percent_torque: vehicle::SignalVariant
+ m_nominal_friction_percent_torque: vehicle::SignalVariant
+ m_engine_speed: vehicle::SignalVariant
+ m_engine_fuel_rate: vehicle::SignalVariant
+ m_aftertreatment_1_intake_nox: vehicle::SignalVariant
+ m_aftertreatment_1_outlet_nox: vehicle::SignalVariant
+ m_catalyst_tank_level: vehicle::SignalVariant
+ m_engine_inlet_air_mass_flow_rate: vehicle::SignalVariant
+ m_aftertreatment_1_scr_intake_temperature: vehicle::SignalVariant
+ m_aftertreatment_1_scr_outlet_temperature: vehicle::SignalVariant
+ m_aftertreatment_1_diesel_particulate_filter_differential_pressure: vehicle::SignalVariant
+ m_engine_coolant_temperature: vehicle::SignalVariant
+ m_fuel_level: vehicle::SignalVariant
+ m_located_status: vehicle::SignalVariant
+ m_longitude: vehicle::SignalVariant
+ m_latitude: vehicle::SignalVariant
+ m_total_vehicle_distance: vehicle::SignalVariant
--
+ MessageEngineInfo()
+ ~MessageEngineInfo()

+ Encode(encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32 const
+ Decode(in encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32
+ Duplicate(): std::shared_ptr&lt;IMessage&gt; const
+ EncodedSize(): std::size_t const
+ operator=(in other:MessageOBDInfo &amp;): MessageOBDInfo &amp;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>540</y><w>630</w><h>330</h></coordinates><panel_attributes>_SignalVariant_
--
- m_id: std::uint32_t
- m_bits: int
- m_signed: bool
- m_valid: bool
- m_factor: double
- m_offset: double
- m_min: double
- m_max: double
- m_val: double
--
+ SignalVariant(id:std::uint32_t, bits:int, factor:double =1.0, offset:double =0.0, min:double = 0.0, max:double = 0.0)
+ SignalVariant(in other:SignalVariant &amp;)
+ ~SignalVariant()
+ Valid(): bool const
+ Val(): double const 
+ Min(): double const
+ Max(): double const
+ IsInteger(): bool const
+ operator=(in val:double): SignalVariant &amp;
+ operator=(in other:SignalVariant &amp;): SignalVariant &amp;
+ Encoded(): std::uint32_t const</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>620</x><y>710</y><w>140</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>120;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>980</x><y>930</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>740</x><y>1030</y><w>500</w><h>140</h></coordinates><panel_attributes>_MessageEngineInfo17691_
--
--
+ MessageEngineInfo17691()
+ ~MessageEngineInfo17691()

+ Encode(encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32 const
+ Decode(in encode::std::vector&lt;SMLK_UINT8&gt; &amp;): SMLK_UINT32
+ Duplicate(): std::shared_ptr&lt;IMessage&gt; const;
+ EncodedSize(): std::size_t const;</panel_attributes><additional_attributes></additional_attributes></element></diagram>